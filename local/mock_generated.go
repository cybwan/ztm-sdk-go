// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cybwan/ztm-sdk-go/local (interfaces: ZtmLocalSpec)

// Package local is a generated GoMock package.
package local

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockZtmLocalSpec is a mock of ZtmLocalSpec interface.
type MockZtmLocalSpec struct {
	ctrl     *gomock.Controller
	recorder *MockZtmLocalSpecMockRecorder
}

// MockZtmLocalSpecMockRecorder is the mock recorder for MockZtmLocalSpec.
type MockZtmLocalSpecMockRecorder struct {
	mock *MockZtmLocalSpec
}

// NewMockZtmLocalSpec creates a new mock instance.
func NewMockZtmLocalSpec(ctrl *gomock.Controller) *MockZtmLocalSpec {
	mock := &MockZtmLocalSpec{ctrl: ctrl}
	mock.recorder = &MockZtmLocalSpecMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockZtmLocalSpec) EXPECT() *MockZtmLocalSpecMockRecorder {
	return m.recorder
}

// GetLocalAgent mocks base method.
func (m *MockZtmLocalSpec) GetLocalAgent() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLocalAgent")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetLocalAgent indicates an expected call of GetLocalAgent.
func (mr *MockZtmLocalSpecMockRecorder) GetLocalAgent() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLocalAgent", reflect.TypeOf((*MockZtmLocalSpec)(nil).GetLocalAgent))
}

// GetLocalEndpointId mocks base method.
func (m *MockZtmLocalSpec) GetLocalEndpointId() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLocalEndpointId")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetLocalEndpointId indicates an expected call of GetLocalEndpointId.
func (mr *MockZtmLocalSpecMockRecorder) GetLocalEndpointId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLocalEndpointId", reflect.TypeOf((*MockZtmLocalSpec)(nil).GetLocalEndpointId))
}

// GetLocalHostAddr mocks base method.
func (m *MockZtmLocalSpec) GetLocalHostAddr() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLocalHostAddr")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetLocalHostAddr indicates an expected call of GetLocalHostAddr.
func (mr *MockZtmLocalSpecMockRecorder) GetLocalHostAddr() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLocalHostAddr", reflect.TypeOf((*MockZtmLocalSpec)(nil).GetLocalHostAddr))
}

// GetLocalMesh mocks base method.
func (m *MockZtmLocalSpec) GetLocalMesh() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLocalMesh")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetLocalMesh indicates an expected call of GetLocalMesh.
func (mr *MockZtmLocalSpecMockRecorder) GetLocalMesh() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLocalMesh", reflect.TypeOf((*MockZtmLocalSpec)(nil).GetLocalMesh))
}

// GetLocalUser mocks base method.
func (m *MockZtmLocalSpec) GetLocalUser() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLocalUser")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetLocalUser indicates an expected call of GetLocalUser.
func (mr *MockZtmLocalSpecMockRecorder) GetLocalUser() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLocalUser", reflect.TypeOf((*MockZtmLocalSpec)(nil).GetLocalUser))
}
